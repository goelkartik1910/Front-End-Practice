How to use javascript in html?
1. In-line --> Just use <script></script> tags in body.
2. Link external file. <script src=""></script>

--> Whatever interacts can be done by Javascript.
--> adding timer.
--> dynamically add and remove html elements.
--> Semicolon is not mandatory in JS.
--> OOPS Based
--> Scripting Language: Made for Client-Side execution
--> Interpreted Language: Runs Line by Line
--> Case Sensitive
--> Synchronous Language: Complete one task and then move to next task.
--> Loosely/Dynamic typed Language
    let age = "18"; (no need of datatype)

Client ------------> (requests)Server
Client <------------ (response)Server
FrontEnd              BackEnd

Basic Commands
1. console.log() --> to print anything
2. prompt() --> to take input and show a message.
3. alert() --> gives alert
4. confirm() --> asks yes or no.

Variables
1. let --> 
example
    let number = 22;

Operators
1. Unary: which have only 1 operand
    ++, --
2. Binary: which have only 2 operand
    a) Airthmatic Operators
        +, -, /, *, %, **
    b) Comparison Operators
        ==, !=, >, <, >=, <=, ===
    c) Logical Operators
        &&, ||, !
    4) Bitwise Operators
        &(AND), |(OR), ^(XOR), <<(LEFT SHIFT), >>(RIGHT SHIFT)
    5) Assignement Operator
        =, +=, -+, *=, **=, /=, %=
3. Ternary

"abc" + "xyz" --> abcxyz
"abc" + "xyz" --> abcxyz
`abc` + 'xyz' --> abcxyz
20 + "abc" --> 20abc // it will treat 20 as an another strings
true + "abc" --> trueabc // it will treat true as an another strings
true + 20 --> 21 // as true --> 1 and false --> 0
true + true --> 2 // again the same thing

'' && 10 -->
true && 'abc' --> if 1st is true then it will check what is next and print it
false && anything --> false
undefined && anything --> undefined
false || anything --> anything
true || anything --> true
'' || anything --> anything
!anything --> false
!'' --> true
!0 --> true

Conclusion
1. If one operand is string then it will make it strings
2. If there is no string then it will be number.
3. Comparison operators do not compare data types, they compare data.

What can be the opperands for a comparison operators? 
ans: any data type
What is the result of the comparison operators?
ans: boolean value

Datatypes:
1. undefined
2. number
3. string
4. boolean

Typecasting
1. Number to boolean --> Boolean() 
    Only number 0 will false, remaining all are true.
2. Strings to boolean --> Boolean()
    Empty string -> false, remaining all are true.
3. Number to strings --> String()
    number becomes string
4. Boolean to Strings --> String()
    remains same but as string
5. undefined to Strings --> String()
    remains NAN
6. bool to number --> Number()
    true is 1 and false is 0
7. String to Integer --> parseInt()

If you want to know any typw of datatype then use --> typeof()

if(){

}else{

}

What is var, const and let? What is difference between them?
Hoisting: it moves the function, variable and class value to the top of their scope.
undefined: Variable declaration is there but not Assignement
not defined: variable declaration is not there


var: 
    can redeclare and can reinitialize
let: 
    cannot redeclare and can reinitialize
    present in some another space than global
    in script memory you cannot access a variable until its initalized a value
    TDZ(temporal Dead Zone) : period of time when let and const declarations cannot be accesed.
const:
    cannot redeclare and cannot reinitialize
    present in some another space than global

Scope:
    1. var --> has global scope
        even if we dont write var it will work. 
    2. let --> has local scope

What are functions?
Pure --> take input and give some fixed output
     --> no side effct in outside world
    example:
    function add(a,b){
        console.log(a*b);
    }

Impure --> can have different outputs
       --> causes side effect on outside world
    example: 
    const a = 42;
    function getVal(b){
        a + b;
    }

FUNCTION BODY-->
    function funct_name(){

    }

FUNCTION CALLING-->
    funct_name();

FUNCTION EXPRESSION-->
    they are functions which are store in variables
    let func = function(){ //anynoymus function --> functions with no name
        console.log("func declaration")
    }

Arrow Function-->
    for example you want to write this function

    function printName(){
        console.log("name: ", "Kartik Goel")
    }

    let printName = () => {
        console.log("name: ", "Kartik Goel")
    }
    printName();


/////////////////while loop
/////// print 1 to 100.
var start = 1;
var end = 100;
var step = 1;

while(start <= end){
    console.log(start);
    step++;
}


/////////////////for loop
/////// print 1 to 100.

for(var i = 1; i <= end; i++){
    console.log(i);
}